{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","props","name","tag","location","avatar","stats","className","s","profile","description","src","alt","width","label","quantity","followers","views","likes","Statistics","title","statistics","list","map","stat","item","style","backgroundColor","Math","round","random","percentage","id","FriendListItem","isOnline","status","statusOn","statusOff","FriendList","friends","friend","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7f8a45f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1dXZ_\",\"description\":\"Profile_description__3ayvK\",\"avatar\":\"Profile_avatar__2Nxmn\",\"name\":\"Profile_name__1NY27\",\"tag\":\"Profile_tag__pm9Fh\",\"location\":\"Profile_location__2UY7y\",\"stats\":\"Profile_stats__1MWvF\",\"label\":\"Profile_label__3L3e_\",\"quantity\":\"Profile_quantity__VwXX7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__aZ6az\",\"title\":\"Statistics_title__1aaul\",\"list\":\"Statistics_list__3Wf_j\",\"item\":\"Statistics_item__1hrj3\",\"label\":\"Statistics_label__2Dtuz\",\"percentage\":\"Statistics_percentage__3Qv42\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__1S6DL\",\"status\":\"FriendListItem_status__tDEc-\",\"statusOn\":\"FriendListItem_statusOn__2lkBN\",\"statusOff\":\"FriendListItem_statusOff__3ToYl\",\"avatar\":\"FriendListItem_avatar__1fghb\",\"name\":\"FriendListItem_name__m2RQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__1A1FP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__2iRcy\"};","import PropTypes from 'prop-types';\r\nimport s from './Profile.module.css';\r\n\r\nexport default function Profile(props) {\r\n  const { name, tag, location, avatar, stats } = props;\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img\r\n          src={avatar}\r\n          alt=\"Аватар пользователя\"\r\n          className={s.avatar}\r\n          width=\"120\"\r\n        />\r\n        <p className={s.name}>{name}</p>\r\n        <p className={s.tag}>@{tag}</p>\r\n        <p className={s.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li>\r\n          <span className={s.label}>Followers</span>\r\n          <span className={s.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Views</span>\r\n          <span className={s.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Likes</span>\r\n          <span className={s.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nfunction randomColor() {\r\n  var color =\r\n    'rgb(' +\r\n    Math.round(Math.random() * 255) +\r\n    ',' +\r\n    Math.round(Math.random() * 255) +\r\n    ',' +\r\n    Math.round(Math.random() * 255) +\r\n    ')';\r\n\r\n  return color;\r\n}\r\n\r\nexport default function Statistics({ title, stats }) {\r\n  return (\r\n    <section className={s.statistics}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n\r\n      <ul className={s.list}>\r\n        {stats.map(stat => (\r\n          <li\r\n            key={stat.id}\r\n            className={s.item}\r\n            style={{ backgroundColor: randomColor() }}\r\n          >\r\n            <span className={s.label}>{stat.label}</span>\r\n            <span className={s.percentage}>{stat.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './FriendListItem.module.css';\r\n\r\nexport default function FriendListItem(props) {\r\n  const { avatar, name, isOnline } = props;\r\n  return (\r\n    <li className={s.item}>\r\n      <span\r\n        className={`${s.status} ${isOnline ? s.statusOn : s.statusOff}`}\r\n      ></span>\r\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={s.name}>{name}</p>\r\n    </li>\r\n  );\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n","import FriendListItem from '../FriendListItem/FriendListItem';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FriendList.module.css';\r\n\r\nexport default function FriendList({ friends }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {friends.map(friend => (\r\n        <FriendListItem\r\n          key={friend.id}\r\n          avatar={friend.avatar}\r\n          name={friend.name}\r\n          isOnline={friend.isOnline}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './TransactionHistory.module.css';\r\n\r\nexport default function TransactionHistory({ items }) {\r\n  return (\r\n    <table className={s.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      {items.map(item => (\r\n        <tbody key={item.id}>\r\n          <tr>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        </tbody>\r\n      ))}\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nimport user from './data/user.json';\nimport statisticalData from './data/statistical-data.json';\nimport friends from './data/friends.json';\nimport transactions from './data/transactions.json';\n\nexport default function App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />,\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}